[gd_scene load_steps=12 format=3 uid="uid://br1vh8in0e65o"]

[ext_resource type="Texture2D" uid="uid://c8t5cjeycroo7" path="res://addons/kenney_prototype_textures/purple/texture_10.png" id="1_51upi"]
[ext_resource type="Texture2D" uid="uid://css2nn0yv1t1d" path="res://addons/kenney_prototype_textures/dark/texture_01.png" id="2_1wnvo"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_3royi"]
sky_top_color = Color(0.494118, 0.772549, 1, 1)
sky_horizon_color = Color(0, 0, 0, 1)

[sub_resource type="Sky" id="Sky_sd3km"]
sky_material = SubResource("ProceduralSkyMaterial_3royi")

[sub_resource type="Environment" id="Environment_n00cx"]
background_mode = 2
background_energy_multiplier = 0.6
sky = SubResource("Sky_sd3km")
tonemap_mode = 3
glow_enabled = true
volumetric_fog_density = 0.2198
volumetric_fog_albedo = Color(0.6, 0.466667, 1, 1)
volumetric_fog_emission = Color(0.6, 0.466667, 1, 1)
volumetric_fog_emission_energy = 0.03
adjustment_brightness = 1.5

[sub_resource type="GDScript" id="GDScript_cwteg"]
script/source = "extends Area3D

func _ready():
	body_entered.connect(func(body):
		if body.is_in_group('player'):
			body.global_position = Vector3(0,5,0)
		)
"

[sub_resource type="BoxShape3D" id="BoxShape3D_oclkr"]
size = Vector3(100000, 1, 100000)

[sub_resource type="Shader" id="Shader_qdnrl"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	vec3 normal = MODEL_NORMAL_MATRIX * NORMAL;
	TANGENT = vec3(0.0,0.0,-1.0) * abs(normal.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(normal.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(normal.z);
	TANGENT = inverse(MODEL_NORMAL_MATRIX) * normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(normal.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(normal.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(normal.z);
	BINORMAL = inverse(MODEL_NORMAL_MATRIX) * normalize(BINORMAL);
	uv1_power_normal=pow(abs(normal),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = (MODEL_MATRIX * vec4(VERTEX, 0)).xyz * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}




vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = triplanar_texture(texture_normal,uv1_power_normal,uv1_triplanar_pos).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6xoc5"]
render_priority = 0
shader = SubResource("Shader_qdnrl")
shader_parameter/albedo = Color(0.662452, 0.662452, 0.662452, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.25
shader_parameter/metallic = 0.0
shader_parameter/normal_scale = 0.25
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_51upi")
shader_parameter/texture_normal = ExtResource("2_1wnvo")

[sub_resource type="BoxMesh" id="BoxMesh_2ok1k"]
size = Vector3(1000, 0.25, 1000)
subdivide_width = 32
subdivide_height = 32
subdivide_depth = 32

[sub_resource type="BoxShape3D" id="BoxShape3D_43yoo"]
size = Vector3(1000, 0.25, 1000)

[node name="basic starter" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_n00cx")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.865617, -0.417461, 0.276465, -0.267145, 0.852051, 0.450158, -0.423486, 0.315808, -0.849073, 0, 1.72518, 0)
directional_shadow_mode = 0

[node name="floor boundary" type="Area3D" parent="."]
script = SubResource("GDScript_cwteg")

[node name="CollisionShape3D" type="CollisionShape3D" parent="floor boundary"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, -326.938, -0.307133)
shape = SubResource("BoxShape3D_oclkr")

[node name="StaticBody3D" type="StaticBody3D" parent="."]
collision_layer = 9
collision_mask = 9

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D"]
material_override = SubResource("ShaderMaterial_6xoc5")
mesh = SubResource("BoxMesh_2ok1k")

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D"]
shape = SubResource("BoxShape3D_43yoo")
