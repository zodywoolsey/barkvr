; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="barkVR"
run/main_scene="res://mainSystem/scenes/main.tscn"
config/features=PackedStringArray("4.0", "Mobile")
boot_splash/bg_color=Color(0, 0, 0, 1)
boot_splash/image="res://assets/doge-color-darker-dog.png"
boot_splash/fullsize=false
config/icon="res://assets/doge-color-darker-dog.png"
boot_splash/minimum_display_time=2000

[autoload]

XRToolsUserSettings="res://addons/godot-xr-tools/user_settings/user_settings.gd"
LocalGlobals="*res://mainSystem/scripts/localGlobals.gd"
NetworkHandler="*res://mainSystem/scripts/networkHandler.gd"
Notifyvr="*res://addons/notifyvr/notifyvr.gd"

[display]

window/size/viewport_width=800
window/size/viewport_height=600
window/subwindows/embed_subwindows=false
window/handheld/orientation=4
window/vsync/vsync_mode=0

[editor_plugins]

enabled=PackedStringArray("res://addons/simplegrasstextured/plugin.cfg", "res://addons/contextmenu/plugin.cfg")

[input]

forward={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"key_label":0,"unicode":119,"echo":false,"script":null)
]
}
back={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"key_label":0,"unicode":115,"echo":false,"script":null)
]
}
up={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"key_label":0,"unicode":119,"echo":false,"script":null)
]
}
down={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"key_label":0,"unicode":115,"echo":false,"script":null)
]
}
left={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":65,"key_label":0,"unicode":97,"echo":false,"script":null)
]
}
right={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":68,"key_label":0,"unicode":100,"echo":false,"script":null)
]
}
click={
"deadzone": 0.5,
"events": [Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"button_mask":1,"position":Vector2(171, 6),"global_position":Vector2(175, 49),"factor":1.0,"button_index":1,"pressed":true,"double_click":false,"script":null)
]
}

[input_devices]

pointing/emulate_touch_from_mouse=true

[layer_names]

3d_physics/layer_1="characters"
3d_physics/layer_2="3dlaser"
3d_physics/layer_3="uilaser"
3d_physics/layer_4="grabbable"

[physics]

3d/run_on_separate_thread=true
common/physics_ticks_per_second=200
common/physics_jitter_fix=0.0

[rendering]

occlusion_culling/bvh_build_quality=0
textures/vram_compression/import_etc2_astc=true
textures/default_filters/anisotropic_filtering_level=0
occlusion_culling/use_occlusion_culling=true
environment/defaults/default_environment="res://defaultEnvironment.tres"

[xr]

openxr/enabled=true
shaders/enabled=true
